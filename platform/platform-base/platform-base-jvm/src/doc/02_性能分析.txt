Linux系统：
1、应用进程监控分析:
    ps -ef|grep java        查看所有JAVA进程，找到要分析进程。
    top                     查看监控进程的总统资源占用情况。
    top -H -p 进程号        查看监控进程内的线程资源占用情况。
    top -p 进程号           查看监控进程的内存、CPU、负载情况。
    jstack 进程号           查看监控进程内的线程执行情况（根据上一步的线程ID的找到线程执行情况）。
    jstack 进程号 | 线程号  查看监控进程内对应线程的栈信息。
    jmap -histo 进程号      查看内存存储对象情况（列出存活对象类型）
    jmap -dump:format=b,file=文件名 进程号   导出当前进程的内存转储文件
    jstat -gcutil 进程号    查看监控进程的堆使用情况(堆内存使用情况、GC执行情况)。
        jstat说明：jstat -gc <pid 进程号>  [time 间隔时间输出] [count 输出次数]
        S0C  survivor0区的总容量       S1C  survivor1区的总容量       S0U  survivor0区已使用的容量
        S1C  survivor1区已使用的容量   EC   Eden区的总容量            EU   Eden区已使用的容量
        OC   Old区的总容量             OU   Old区已使用的容量         PC   当前perm的容量 (KB)
        PU   perm的使用 (KB)           YGC  新生代垃圾回收次数        YGCT 新生代垃圾回收时间
        FGC  老年代垃圾回收次数        FGCT 老年代垃圾回收时间        GCT  垃圾回收总消耗时间
    jstat -gcutil <pid 进程号>  [time 间隔时间输出] [count 输出次数]
        输出信息同gc一样，输出的是已使用空间占总空间的百分比
    jstat -gccause <pid 进程号>  [time 间隔时间输出] [count 输出次数]
        输出信息同gcutil一样，输出增加最近两次垃圾回收事件的原因
        LGCC 最近垃圾回收的原因        GCC  当前垃圾回收的原因
    10、lsof -i :端口号        查看对应端口的占用情况
        TCP连接状态详解
        LISTEN：侦听来自远方的TCP端口的连接请求
        SYN-SENT：再发送连接请求后等待匹配的连接请求
        SYN-RECEIVED：再收到和发送一个连接请求后等待对方对连接请求的确认
        ESTABLISHED：代表一个打开的连接，表示正常数据传输状态；
        CLOSE-WAIT：等待从本地用户发来的连接中断请求(被动关闭，另一端关闭连接，被动方未响应关闭请求。)
        CLOSED:没有任何连接状态
2、系统资源监控:
    1、vmstat 1       监控CPU使用情况
    2、iostat -xm 5   监控磁盘IO情况
    3、netstat        监控网络情况
3、shell命令脚本:
    a、命令行访问url：
        GET请求     curl http://地址:端口/描述符
        POST请求    curl http://地址:端口/描述符 -X POST

windows系统：
系统资源监控:
1、netstat -ano       查看系统套接字连接情况
2、route print        查看本地网络路由情况