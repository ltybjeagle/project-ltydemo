server:
  port: 8080
  tomcat:
    # 限制Tomcat一次最多只能处理20个请求
    threads:
      max: 20
  servlet:
    context-path: /order

spring:
  application:
    name: microservice-order
  datasource:
    druid:
      db-type: com.alibaba.druid.pool.DruidDataSource
      url: jdbc:oracle:thin:@192.168.100.80:1521/orcl
      username: fasp_34dev
      password: 1
      driver-class-name: oracle.jdbc.OracleDriver
      # 下面为连接池的补充设置，应用到上面所有数据源中
      # 初始化大小，最小，最大
      initial-size: 10
      min-idle: 5
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 3600000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 3600000
      validation-query: select 1 from dual
      test-while-idle: on
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: on
      max-pool-prepared-statement-per-connection-size: 20
      max-open-prepared-statements: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
    sentinel:
      transport:
        port: 9999  # 指定和Sentinel控制台交互的端口，任意指定一个未使用的端口即可
        dashboard: 127.0.0.1:8888  # Sentinel控制台服务地址
      web-context-unify: false
      log:
        dir: D:\microservice\softlog\sentinel\service-logs

http:
  encoding:
    enabled: true
    charset: UTF-8
    force: true

mybatis-plus:
  global-config:
    db-config:
      id-type: auto
      field-strategy: not-empty
      db-type: oracle
      logic-delete-value: 1
      logic-not-delete-value: 0
      table-underline: on
  mapper-locations: classpath:/mapper/*.xml
  configuration:
    jdbc-type-for-null: 'null'

feign:
  sentinel:
    enabled: on