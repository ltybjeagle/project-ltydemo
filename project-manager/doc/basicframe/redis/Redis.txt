###################################[基础概念]####################################################################
单线层运行，性能快：
    1、纯内存操作
    2、单线程，避免频繁的上下文切换
    3、非阻塞I/O多路复用机制

Redis类型：
    1、String
    2、Hash
    3、List
    4、Set
    5、Sorted Set

Redis过期策略：定期删除 + 惰性删除
    1、默认100ms检查，随机抽取部分检查，过期删除
    2、惰性删除在访问KEY的时候检查KEY是否过期
    3、存在问题：存在KEY删除不掉

淘汰策略：
    1、noenviction（驱逐）：禁止驱逐数据，直接报错
    2、allkeys-lru：从数据集中挑选最近最少使用的数据淘汰
    3、allkeys-random：从数据集中任意选择数据淘汰
    4、voltile-lru：从设置过期时间的数据集中挑选最近最少使用的数据淘汰
    5、volatile-random：从设置过期时间的数据集中任意选择数据淘汰
    6、volatile-ttl：从设置过期时间的数据集中挑选将要过期的数据淘汰

Redis与数据库双写一致性问题：
    1、先写数据库，在删除缓存
    2、对于删除缓存失败情况，提供补偿措施（如消息队列）

缓存穿透：故意请求不存在的KEY，导致压力打到数据库
    1、使用互斥锁
    2、异步更新策略

缓存雪崩：统一时间大批缓存失效
    1、使用互斥锁
    2、双缓存，一份缓存有时效，一份缓存没有时效，异步同步缓存信息