负载均衡器：属于客户端负载均衡
1、负载逻辑：
    a、负载均衡器里维护服务实例列表（分为：全部服务列表、可用服务列表、不可用服务列表）
    ，服务列表通过eureka注册中心获取（定时任务，定时）。
    b、均衡器内部组合均衡策略，根据服务名获取具体实例列表，使用策略获取一个实例，实例里包含服务信息（地址、端口等）
    c、获取实例列表可以使用“区域感知”过滤器：元数据配置区域信息，根据元数据区域信息匹配同区域的服务实例
        例外：如果服务实例达到一些阀值，就停止使用区域感知过滤器
2、负载均衡策略：
    a、随机
    b、轮训，设置计数器count，控制10次不能获取到服务实例，就结束获取，提示没有服务
    c、轮训重试，设置超时阀值，在阀值内重试获取，超过阀值结束获取，返回空实例
    d、权重轮训，定时任务定时计算权重，根据个实例节点的响应时间计算权重区间
    e、并发负载最优，获取并发最小的实例
    f、过滤清单轮训，在轮训的基础上增加了一层过滤功能
3、健康检查：
    a、定时任务定时检查服务是否可用
    b、结合eureka注册中心实现
4、负载均衡逻辑组件：
    a、负载均衡器
    b、健康检查组件，结合eureka注册中心的话，使用eureka注册中心的健康检查机制
    c、负载均衡算法组件
    d、服务列表组件，结合eureka注册中心的话，使用eureka注册中心服务列表机制
    f、服务列表过滤组件
5、参数配置：
    a、全局配置，参考：如下配置基于cloud版本1.5.9
        ##设置负载均衡策略，如：com.netflix.loadbalancer.RoundRobinRule
        ribbon.NFLoadBalancerRuleClassName:
        ##设置请求连接的超时时间，如：500
        ribbon.ConnectTimeout：
        ##设置请求处理的超时时间，如：3000
        ribbon.ReadTimeout：
        ##设置对所有请求进行重试，如：true
        ribbon.OkToRetryOnAllOperations：
        ##设置切换其他实例重试次数，如：2
        ribbon.MaxAutoRetriesNextServer：
        ##设置同一实例重试次数，如：1
        ribbon.MaxAutoRetries：
    b、单个服务配置：服务名.ribbon.*
6、使用示例：
    在RestTemplate上加上注解@LoadBalanced，即可实现负载均衡。
    GET请求：RestTemplate.getForEntity、RestTemplate.getForObject
    POST请求：RestTemplate.postForEntity、RestTemplate.postForObject、RestTemplate.postForLocation
    PUT请求：RestTemplate.put
    DELETE请求：RestTemplate.delete