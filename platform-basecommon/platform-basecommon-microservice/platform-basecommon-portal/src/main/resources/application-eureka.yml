eureka:
  client:
    service-url:
      defaultZone: http://admin:123456@localhost:8761/eureka/
      # 集群注册中心：http://admin:123456@localhost:8761/eureka/,http://admin:123456@localhost:8762/eureka/
    healthcheck:
      enabled: true # 开启健康检查，需要引入 actuator 的依赖
  instance:
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port} # 定义实例ID格式
    prefer-ip-address: true # 采用IP注册
    status-page-url: www.instance.net # 自定义实例跳转链接
    lease-renewal-interval-in-seconds: 10 # 默认 30 秒，表示 Client 发送心跳给 server 的频率
    lease-expiration-duration-in-seconds: 30 # 默认 90 秒，表示Server 两次心跳超时时间，时间内未收到心跳，移除Instance
ribbon:
  eager-load:
    enabled: true # 开启 Ribbon 的饥饿加载模式
    clients: usercenter-service # 指定饥饿加载的服务名，也就是调用的服务，若有多个则用逗号隔开
  ConnectTimeout: 2000 # 请求连接的超时时间
  ReadTimeout: 5000 # 请求处理的超时时间
  MaxTotalConnections: 500 # 最大连接数
  MaxConnectionsPerHost: 500 # 每个host最大连接数
  maxAutoRetries: 1 # 对当前实例的重试次数
  maxAutoRetriesNextServer: 1 # 切换实例的重试次数
  okToRetryOnAllOperations: true # 对所有操作请求都进行重试
  retryableStatusCodes: 500,404,502 # 对Http响应码进行重试
#  eureka:
#    enabled: false # 禁用 Eureka
usercenter-service:
  ribbon:
    # 可以为每个Ribbon客户端设置不同的超时时间, 通过服务名称进行指定
    ConnectTimeout: 2000
    ReadTimeout: 5000
#    listOfServers: localhost:8081 # 禁用 Eureka 后， 配置服务列表，跟ribbon.eureka.enabled 联合使用
#    NFLoadBalancerRuleClassName: com.sunny.maven.ribbon.rule.MyRule  # 自定义负载策略
#    NFLoadBalancerPingClassName: Should implement IPing(服务可用性检查)
