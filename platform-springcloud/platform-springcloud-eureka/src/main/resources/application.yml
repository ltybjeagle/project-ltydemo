server:
  port: 8761

spring:
  application:
    name: @pom.artifactId@
  security:
    user:
      name: sunny
      password: 123456

# 1、eureka使用双层MAP存储：
# 一层KEY：服务名
# 二层KEY：实例名
# 2、region、zone注册分区绑定(区域亲和特性)
# 3、定时任务，判断剔除异常服务
eureka:
  instance:
    hostname: localhost
  client:
    # 服务为注册中心，所以不需要注册自己，设置false
    register-with-eureka: false
    # 设置false，不检索服务
    fetch-registry: false
#    service-url:
#      default-zone: http://${eureka.instance.hostname}:${server.port}/eureka/
  server:
    # eureka server缓存readWriteCacheMap失效时间：
    # 时间过期缓存失效，失效前不更新MAP，过期后从registry重新读取注册信息，
    # registry是一个ConcurrentHashMap，默认180s
    responseCacheAutoExpirationInSeconds: 180
    # eureka server刷新readCacheMap的时间：
    # client读取的是readCacheMap，配置多久同步readWriteCacheMap到readCacheMap
    # 默认30s
    responseCacheUpdateIntervalMs: 3000
    peer-node-read-timeout-ms: 200000
    # 设为false，关闭自我保护(保护会导致客户端获取到异常服务)
    enable-self-preservation: false
    # 清理间隔（单位毫秒，默认是60*1000）
    eviction-interval-timer-in-ms: 5000