APPLICATION_ID: sample                  #应用
service_description:
  name: helloworld                      #服务名
  version: 1.0.0                        #版本号
  environment: development

servicecomb:
  service:
    registry:
      address: http://192.168.184.249:30100 #注册中心
  rest:
    address: 0.0.0.0:8080 #监听端口
  metrics:
    window_time: 60000 #统计周期，单位为毫秒 TPS、时延等周期性数据，每周期更新一次，在周期内获取到的值，实际是上一周期的值
    invocation:
      latencyDistribution: 0,1,10,100,1000 #时延分布时间段定义，单位为毫秒 例如：0,1,10,100,1000 表示定义了下列时延段[0, 1),[1, 10),[10, 100),[100, 1000),[1000, )
    Consumer.invocation.slow:
      enabled: true #是否开启Consumer端的慢调用检测 通过增加后缀.${service}.${schema}.${operation}，可以支持4级优先级定义
      msTime: 1000 #时延超过配置值，则会立即输出日志，记录本次调用的stage耗时信息 通过增加后缀.${service}.${schema}.${operation}，可以支持4级优先级定义
    Provider.invocation.slow:
      enabled: true #是否开启Provide端的慢调用检测 通过增加后缀.${service}.${schema}.${operation}，可以支持4级优先级定义
      msTime: 1000 #时延超过配置值，则会立即输出日志，记录本次调用的stage耗时信息 通过增加后缀.${service}.${schema}.${operation}，可以支持4级优先级定义
    publisher.defaultLog:
      enabled: true #是否输出默认的统计日志
      endpoints.client.detail.enabled: true #是否输出每一条client endpoint统计日志，因为跟目标的ip:port数有关，可能会有很多数据，所以默认不输出